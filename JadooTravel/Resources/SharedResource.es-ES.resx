<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FeatureButton" xml:space="preserve">
    <value>Descubra más</value>
  </data>
  <data name="FeatureComment1" xml:space="preserve">
    <value>
Wicket construido ya no admira el propio tocador de Barton en él.</value>
  </data>
  <data name="FeatureComment2" xml:space="preserve">
    <value>
Preferido a los deportistas, se entretenía escuchando. Puerta del parque</value>
  </data>
  <data name="FeatureComment3" xml:space="preserve">
    <value>
Venderlas al oeste duro para el.</value>
  </data>
  <data name="FeaturePlay" xml:space="preserve">
    <value>
Jugar demostración</value>
  </data>
  <data name="FeatureSubTittle" xml:space="preserve">
    <value>Viaja, disfruta y vive una vida nueva y plena</value>
  </data>
  <data name="FeatureTittle" xml:space="preserve">
    <value>
Descubre las mejores rutas del mundo</value>
  </data>
  <data name="DestinationTittle" xml:space="preserve">
    <value>
Nuestras Rutas Turísticas</value>
  </data>
  <data name="DestinationSubTittle" xml:space="preserve">
    <value>
Más preferida</value>
  </data>
  <data name="ServicesCategory" xml:space="preserve">
    <value>Categorías</value>
  </data>
  <data name="ServicesTittle" xml:space="preserve">
    <value>
Ofrecemos los mejores servicios</value>
  </data>
  <data name="RezervationSubTittle" xml:space="preserve">
    <value>Reserva Fácil y Rápida
</value>
  </data>
  <data name="RezervationTittle" xml:space="preserve">
    <value>Complete su reserva en 3 pasos
</value>
  </data>
  <data name="Rezervation1" xml:space="preserve">
    <value>Elige Destino</value>
  </data>
  <data name="Rezervation2" xml:space="preserve">
    <value>Elige tu lugar favorito. No importa</value>
  </data>
  <data name="Rezervation3" xml:space="preserve">
    <value>donde viajas dentro del Mundo.
</value>
  </data>
  <data name="Rezervation4" xml:space="preserve">
    <value>Realizar pago</value>
  </data>
  <data name="Rezervation5" xml:space="preserve">
    <value>Después de encontrar tu lugar perfecto, haz tu
</value>
  </data>
  <data name="Rezervation6" xml:space="preserve">
    <value>
pago y prepárate para viajar.</value>
  </data>
  <data name="Rezervation7" xml:space="preserve">
    <value>Llegar al aeropuerto en la fecha seleccionada</value>
  </data>
  <data name="Rezervation8" xml:space="preserve">
    <value>
Por último, tienes que llegar al aeropuerto</value>
  </data>
  <data name="Rezervation9" xml:space="preserve">
    <value>puntual y disfrutar de las vacaciones.
</value>
  </data>
  <data name="Iletisim" xml:space="preserve">
    <value>Formulario de contacto
</value>
  </data>
  <data name="iletisimadsoyad" xml:space="preserve">
    <value>Tu nombre y apellido
</value>
  </data>
  <data name="İletisimtelno" xml:space="preserve">
    <value>Tu número de teléfono
</value>
  </data>
  <data name="iletisimemail" xml:space="preserve">
    <value>Su dirección de correo electrónico
</value>
  </data>
  <data name="iletisimeklenecek" xml:space="preserve">
    <value>Si hay algo que quieras agregar...
</value>
  </data>
  <data name="iletisimgonder" xml:space="preserve">
    <value>Enviar</value>
  </data>
  <data name="navbar1" xml:space="preserve">
    <value>Nuestros servicios
</value>
  </data>
  <data name="navbar2" xml:space="preserve">
    <value>Ubicaciones</value>
  </data>
  <data name="navbar3" xml:space="preserve">
    <value>Reservas</value>
  </data>
  <data name="navbar4" xml:space="preserve">
    <value>Escríbenos</value>
  </data>
  <data name="navbar5" xml:space="preserve">
    <value>Acceso</value>
  </data>
  <data name="navbar6" xml:space="preserve">
    <value>inscribirse
</value>
  </data>
  <data name="Testimonialtittle" xml:space="preserve">
    <value>Testimonios</value>
  </data>
  <data name="TestimonialSubTittle" xml:space="preserve">
    <value>Lo que la gente dice sobre nosotros.
</value>
  </data>
  <data name="AItittle" xml:space="preserve">
    <value>¿No puedes decidir dónde visitar? Ingrese la ciudad y el país que desea visitar y vea los lugares más populares.
</value>
  </data>
  <data name="AISearch" xml:space="preserve">
    <value>Introduce la ciudad a la que quieres ir...
</value>
  </data>
  <data name="AIButton" xml:space="preserve">
    <value>investigación
</value>
  </data>
</root>